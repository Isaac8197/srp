/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : OLED SSD1306 + 3x MAX6675 (CS1=PA7, CS2=PA4, CS3=PA3)
  ******************************************************************************
  */
/* USER CODE END Header */

/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "i2c.h"             /* hi2c1 */
#include "ssd1306_oled.h"
#include "fonts.h"
#include "max6675.h"
#include <stdio.h>
#include <string.h>
#include <math.h>

/* Prototipos generados por CubeMX (deben existir en tu proyecto) */
void SystemClock_Config(void);
void MX_GPIO_Init(void);
void MX_I2C1_Init(void);

/* Función auxiliar para imprimir una línea en la OLED */
static void OLED_PrintLine(uint16_t x, uint16_t y, const char *txt)
{
    SSD1306_GotoXY(x, y);
    SSD1306_Puts((char*)txt, &Font_11x18, WHITE);
}

/* Muestra T1, T2, T3 en 3 renglones */
static void OLED_ShowTemps(float t1, float t2, float t3)
{
    char buf[24];

    SSD1306_Fill(BLACK);

    if (isnan(t1)) snprintf(buf, sizeof(buf), "T1: Err");
    else           snprintf(buf, sizeof(buf), "T1: %.1f C", t1);
    OLED_PrintLine(0, 0, buf);

    if (isnan(t2)) snprintf(buf, sizeof(buf), "T2: Err");
    else           snprintf(buf, sizeof(buf), "T2: %.1f C", t2);
    OLED_PrintLine(0, 22, buf);   /* 22 ~ espaciado para Font_11x18 */

    if (isnan(t3)) snprintf(buf, sizeof(buf), "T3: Err");
    else           snprintf(buf, sizeof(buf), "T3: %.1f C", t3);
    OLED_PrintLine(0, 44, buf);

    SSD1306_UpdateScreen();
}

int main(void)
{
    HAL_Init();
    SystemClock_Config();

    MX_GPIO_Init();
    MX_I2C1_Init();

    /* OLED */
    SSD1306_Init();
    SSD1306_Fill(BLACK);
    SSD1306_UpdateScreen();

    /* MAX6675 */
    MAX6675_init();

    float t1, t2, t3;

    while (1)
    {
        /* Lee los 3 sensores (comparten CK/DAT, cambia sólo el CS) */
        t1 = MAX6675_lee_cs(CS1_MAX_GPIO_Port, CS1_MAX_Pin);  /* PA7 */
        t2 = MAX6675_lee_cs(CS2_MAX_GPIO_Port, CS2_MAX_Pin);  /* PA4 */
        t3 = MAX6675_lee_cs(CS3_MAX_GPIO_Port, CS3_MAX_Pin);  /* PA3 */

        /* Mostrar en OLED */
        OLED_ShowTemps(t1, t2, t3);

        HAL_Delay(1000);
    }
}

/* ----------- Debajo quedan los stubs habituales generados por CubeMX --------
   Si tu proyecto ya los tiene en otros archivos, no dupliques estas funciones.
   Déjalas comentadas o elimina estas firmas para evitar conflictos.           */

__weak void SystemClock_Config(void) {}
__weak void MX_GPIO_Init(void) {}
__weak void MX_I2C1_Init(void) {}

void Error_Handler(void)
{
    __disable_irq();
    while (1) { }
}



#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
  /* USER CODE BEGIN 6 */
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
#endif /* USE_FULL_ASSERT */
